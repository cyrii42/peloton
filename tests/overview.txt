## List of functions
# GetMe(self)
# GetUrl(self,url)
# GetWorkoutList(self, num_workouts=None)
# GetRecentWorkouts(self, num_workouts=None)
# GetWorkoutSummaryById(self, workout_id)
# GetWorkoutMetricsById (self, workout_id, frequency=50)
# GetWorkoutById(self, workout_id)
# GetInstructorById(self, instructor_id)
# GetFollowersById(self, userid=None)

# Retrieve new workouts (if any) from Peloton and create Pandas DataFrame from dict of lists
def get_new_workouts(new_workouts_num: int) -> pd.DataFrame:
    peloton_dict = {
    'start_time_iso': [],
    'start_time_local': [],
    'instructor': [],
    'title': [],
    'duration': [],
    'length': [],
    'output': [],
    'calories': [],
    'cadence_avg': [], 
    'cadence_max': [],
    'resistance_avg': [],
    'resistance_max': [],
    'speed_avg': [],
    'speed_max': [],
    'hr_avg': [], 
    'hr_max': [],
    'effort_points': [],
    'distance': [],
    'difficulty': []    
    }

        workouts = py_conn.GetRecentWorkouts(new_workouts_num)

            # Define necessary lists
            workout_id = w['id']
            ride = w["ride"]
            workout_metrics = py_conn.GetWorkoutMetricsById(workout_id)
            summaries = workout_metrics["summaries"]
            metrics = workout_metrics["metrics"]
            effort_zones = workout_metrics["effort_zones"]

            # Start Time ISO & Start Time Local
            start_timestamp = w["start_time"]


            # Instructor
            #inst = w["instructor_name"]

            
            # Title
            #title = ride["title"]

            # Duration
            #duration = ride["duration"]


            # Length
            #length = ride["length"]


            # Output
            #total_output = summaries[2]["value"]

            
            # Calories
            #cals = summaries[2]["value"]


            # Cadence (Avg) & Cadence (Max)
            #cadence_avg = metrics[1]["average_value"]
            #cadence_max = metrics[1]["max_value"]

            # Resistance (Avg) & Resistance (Max)
            #resistance_avg = metrics[2]["average_value"]   
            #resistance_max = metrics[2]["max_value"]

            # Speed (Avg) & Speed (Max)
            #speed_avg = metrics[3]["average_value"]
            #speed_max = metrics[3]["max_value"]

            # Heart Rate (Avg) & Heart Rate (Max) & Effort Points
            #hr_avg = metrics[4]["average_value"]
            #hr_max = metrics[4]["max_value"]
            #total_effort_points = metrics["total_effort_points"]

            # Distance
            #distance = summaries[1]["value"]
            
            # Difficulty
            #difficulty = ride["difficulty_estimate"]

"workouts" is a 